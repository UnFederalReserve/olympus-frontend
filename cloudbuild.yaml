substitutions:
  _SERVICE_NAME: olympus-frontend
  _PROJECT_NAME: unfederalreserve
  _PROD_DOMAIN: unfederalreserve.com
  _DEV_DOMAIN: unfederalreservetesting.com
options:
  machineType: 'N1_HIGHCPU_8'
steps:

# init environment
- name: 'gcr.io/$PROJECT_ID/yarn:27102021'
  id: init
  waitFor: ['-']
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      set -e
      echo > .cloudbuild.env.sh
      if [ "$BRANCH_NAME" = "master" ]; then
        echo 'export CLUSTER_NAME=master' >> .cloudbuild.env.sh
        echo 'export DOMAIN=$_PROD_DOMAIN' >> .cloudbuild.env.sh
      fi
      if [ "$BRANCH_NAME" = "stage" ]; then
        echo 'export CLUSTER_NAME=stage' >> .cloudbuild.env.sh
        echo 'export URL_ENV_PART=-stage' >> .cloudbuild.env.sh
        echo 'export DOMAIN=$_DEV_DOMAIN' >> .cloudbuild.env.sh
      fi
      if [ "$BRANCH_NAME" = "dev" ]; then
        echo 'export CLUSTER_NAME=dev' >> .cloudbuild.env.sh
        echo 'export URL_ENV_PART=-dev' >> .cloudbuild.env.sh
        echo 'export DOMAIN=$_DEV_DOMAIN' >> .cloudbuild.env.sh
      fi

      ./make.sh install

- name: 'gcr.io/$PROJECT_ID/yarn:27102021'
  id: build
  waitFor:
    - init
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      set -e
      . ./.cloudbuild.env.sh
      SHORT_SHA=$SHORT_SHA BRANCH_NAME=$BRANCH_NAME yarn build --mode $BRANCH_NAME

- name: 'gcr.io/$PROJECT_ID/yarn:27102021'
  id: lint
  waitFor:
    - build
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      set -e
      . ./.cloudbuild.env.sh
      # yarn audit:check
      yarn lint

- name: 'gcr.io/$PROJECT_ID/yarn:27102021'
  id: test
  waitFor:
    - build
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      set -e
      . ./.cloudbuild.env.sh
      yarn test:unit:ci --passWithNoTests

# build docker image
- name: 'gcr.io/cloud-builders/gsutil'
  id: deploy
  waitFor:
    - build
    - lint
    - test
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      set -e
      . ./.cloudbuild.env.sh

      if [ "$$CLUSTER_NAME" = "" ]; then
        echo "Not building on branch $BRANCH_NAME"
        exit;
      fi

      cd dist

      gsutil -m -h "Cache-Control:public,max-age=1209600" cp -z html,js,css,svg -R * gs://$_PROJECT_NAME-$$CLUSTER_NAME-$_SERVICE_NAME
      gsutil setmeta -h "Cache-Control:private, max-age=0, no-transform" gs://$_PROJECT_NAME-$$CLUSTER_NAME-$_SERVICE_NAME/index.html

      if [ "$BRANCH_NAME" = "master" ]; then
        gcloud compute url-maps invalidate-cdn-cache apps-https-lb --async --path "/index.html" --host="app-new.$$DOMAIN"
        gcloud compute url-maps invalidate-cdn-cache apps-https-lb --async --path "/*" --host="app-new.$$DOMAIN"
      else
        gcloud compute url-maps invalidate-cdn-cache apps-https-lb --async --path "/index.html" --host="$_SERVICE_NAME$$URL_ENV_PART.$$DOMAIN"
        gcloud compute url-maps invalidate-cdn-cache apps-https-lb --async --path "/*" --host="$_SERVICE_NAME$$URL_ENV_PART.$$DOMAIN"
      fi
